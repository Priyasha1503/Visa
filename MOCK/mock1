

📝 Mock Visa OA – Set 1 (Easy-Medium Boost Round)
Q1. Square Frame (Arrays & Strings)

Given an integer n, print an n x n square matrix where the border is filled with * and inside is filled with ..

Example:
Input: n = 4
Output:

****
*..*
*..*
****

Q2. Substring Divisible by 3 (Strings + Math)

You are given a string s consisting of digits.
Find the number of substrings whose integer value is divisible by 3.

Example:
Input: s = "303"
Output: 4
Explanation: Substrings divisible by 3 → "3"(0), "0"(1), "3"(2), "303"

Q3. Bubble Pop (Stack Simulation)

You are given a string s consisting of lowercase letters.
Perform the following operation until no more can be done:

If two adjacent characters are the same, remove them.

Return the final string.

Example:
Input: s = "abbaca"
Output: "ca"
Explanation: "abbaca" → "aaca" → "ca"

Q4. Team Ranking (Sorting + Hashmap)

There are n teams, and each team played m matches.
You are given a 2D list scores where scores[i][j] is the score of team i in match j.
Your task:

Find the total score of each team.

Rank the teams in descending order of total score.

If two teams have the same score, the one with the smaller team index comes first.

Example:
Input:

scores = [[10, 20], [30, 15], [25, 25]]


Output:

[2, 1, 0]


Explanation:

Team0 = 30, Team1 = 45, Team2 = 50 → Ranking order [2,1,0]











q1
n=int(input())
for i in range(0,n):
    if i==0 or i==n-1:
        print("*"*n)
    else:
        print("*"+"."*(n-2)+"*")


              
Q2
s=input()
#first find all the substrings, and then see if it is div or not
cnt=0
if int(s)%3==0:
    cnt+=1

for i in range(0,len(s)):
    x=0
    for j in range(i+1,len(s)):
        num=s[i:i+x+1]
        
        if int(num)%3==0:
            cnt+=1
        x+=1
print(cnt)
            

    
                   
Im not sure with the complete answer, and this is kinda bruteforce...yet I think in bruteforce as well, that isnt very ocrrect..may be Idk

Q3
s=input()#lower letters
stack=[]
'''for i in range(0,len(s)):
    if len(stack)>=2:
        ele=stack[-1] # peek
        if s[i]==ele:
            stack.pop()
        else:
            stack.append(ele)
    else:
        stack.append(s[i])
print("".join(stack))'''
def func(s):
    if len(s)<2:
        if s[0]!=s[1]:
            return s
        else:
            return ""
    stack.append(s[0])
    stack.append(s[1])
    for i in range(2,len(s)):
        
        if stack!=[]:
            if s[i]==stack[-1]:
                stack.pop()
            else:
                
                stack.append(s[i])
        else:
            stack.append(s[i])
    return "".join(stack)

print(func(s))

            
                
            
        
        
Q4
scores=[]
n=int(input())
for i in range(0,n):
    x=int(input())
    y=int(input())
    scores.append([x,y])

print(scores)
ind=0
res=[]
d=dict()
for i,j in scores:
    d[ind]=i+j
    ind+=1
print(d)
res=list(d)
#print(res)
res.sort(reverse=True)
print(res)

    

